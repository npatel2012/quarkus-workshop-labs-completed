# Configuration file
# key = value
# configure your datasource
%prod.quarkus.datasource.url=jdbc:postgresql://postgres-database/person
%prod.quarkus.datasource.driver=org.postgresql.Driver
%dev.quarkus.datasource.url=jdbc:h2:mem:person
%dev.quarkus.datasource.driver=org.h2.Driver
%test.quarkus.datasource.url=jdbc:h2:mem:person
%test.quarkus.datasource.driver=org.h2.Driver

quarkus.datasource.username=sa
quarkus.datasource.password=sa

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=drop-and-create


# Run quarkus tests on port 8083 instead of default 8081
quarkus.http.test-port=8083

database.up=true

greeting.message = hello
greeting.name = quarkus
%prod.greeting.name = production quarkus


# Configure the Kafka sink (we write to it)
%prod.mp.messaging.outgoing.generated-name.bootstrap.servers=names-cluster-kafka-bootstrap:9092
%prod.mp.messaging.outgoing.generated-name.connector=smallrye-kafka
%prod.mp.messaging.outgoing.generated-name.topic=names
%prod.mp.messaging.outgoing.generated-name.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Configure the Kafka source (we read from it)
%prod.mp.messaging.incoming.names.bootstrap.servers=names-cluster-kafka-bootstrap:9092
%prod.mp.messaging.incoming.names.connector=smallrye-kafka
%prod.mp.messaging.incoming.names.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer


quarkus.jaeger.service-name=people
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1
quarkus.jaeger.endpoint=http://jaeger-collector:14268/api/traces

org.acme.people.service.StarWarsService/mp-rest/url=https://swapi.co


mp.jwt.verify.publickey.location=https://keycloak-codeready.apps.cluster-quarkus-3091.quarkus-3091.sandbox1684.opentlc.com/auth/realms/quarkus/protocol/openid-connect/certs
mp.jwt.verify.issuer=https://keycloak-codeready.apps.cluster-quarkus-3091.quarkus-3091.sandbox1684.opentlc.com/auth/realms/quarkus
quarkus.smallrye-jwt.auth-mechanism=MP-JWT
quarkus.smallrye-jwt.realm-name=quarkus
quarkus.smallrye-jwt.enabled=true

# OIDC config
quarkus.oidc.auth-server-url=https://keycloak-codeready.apps.cluster-quarkus-3091.quarkus-3091.sandbox1684.opentlc.com/auth/realms/quarkus
quarkus.oidc.client-id=backend-service
quarkus.oidc.credentials.secret=secret
quarkus.http.cors=true

# Enable Policy Enforcement
quarkus.keycloak.policy-enforcer.enable=true
quarkus.keycloak.policy-enforcer.paths.ready.name=Readiness
quarkus.keycloak.policy-enforcer.paths.ready.path=/health/ready
quarkus.keycloak.policy-enforcer.paths.ready.enforcement-mode=DISABLED
quarkus.keycloak.policy-enforcer.paths.live.name=Liveness
quarkus.keycloak.policy-enforcer.paths.live.path=/health/live
quarkus.keycloak.policy-enforcer.paths.live.enforcement-mode=DISABLED